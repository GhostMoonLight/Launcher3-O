buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId 'com.zues.launcher'
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 10000
        versionName "1.0.0"

    }

    //签名信息
    signingConfigs {
        debug{
        }

        releaseConfig {
            storeFile file("./release/launcher.keystore")
            storePassword KEYSTORE_PASSWORD
            keyAlias "CLauncher"
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "true"

            //签名所用的配置文件
            signingConfig signingConfigs.releaseConfig
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    productFlavors {

    }
    sourceSets {
        main {
            res.srcDirs = ['res']
            java.srcDirs = ['src', 'src_config']
            manifest.srcFile 'AndroidManifest.xml'
            proto.srcDirs 'protos/'
//            jinLibs.scrDir 'libs'
        }
    }

//项目还是是Eclipse结构，想保留原有目录结构的同时导入到AS开发，可以自己手动生成build.gradle,配置项目目录结构：
//    android {
//        ....
//        sourceSets {
//            main {
//                manifest.srcFile 'AndroidManifest.xml'
//                java.srcDirs = ['src']
//                resources.srcDirs = ['src']
//                aidl.srcDirs = ['src']
//                renderscript.srcDirs = ['src']
//                res.srcDirs = ['res']
//                assets.srcDirs = ['assets']
//                jniLibs.srcDirs = ['libs']
//            }
//        }
//    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = output.outputFile.name.replace(".apk", "_V${defaultConfig.versionName}_${releaseTime()}.apk")
                    if (!variant.flavorName.isEmpty()){
                        fileName = fileName.replace(".apk", "_${variant.flavorName}.apk")
                    }
//                    output.outputFile = new File(outputFile.parent, fileName)
                    output.outputFileName = new File(fileName)
                }
            }
        }
    }
}

def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

final String SUPPORT_LIBS_VERSION = '26.1.0'
dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')

    compile "com.android.support:support-v4:${SUPPORT_LIBS_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIBS_VERSION}"
    compile "com.android.support:palette-v7:${SUPPORT_LIBS_VERSION}"
    compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-2'
    compile 'com.github.bumptech.glide:glide:4.2.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'

}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                    javanano {
                        option "java_package=launcher_log.proto|com.android.launcher3.userevent.nano"
                        option "enum_style=java"
                    }
                }
            }
        }
    }
}
